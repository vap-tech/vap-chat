services:
  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      - backend
      - frontend
    ports:
        - "80:80"
    volumes:
      - ./nginx/no-ssl:/etc/nginx/conf.d

  frontend:
    build: ./frontend
    container_name: frontend
    #volumes:
    #  - .:/app
    command: npm run start

  backend:
    build: ./backend
    container_name: backend
    volumes:
      - ./backend/:/usr/src/app
    entrypoint: [ "perl", "/usr/src/app/app.pl" ]
    # entrypoint: ["perl", "./migrations/migrate.pl"]
    depends_on:
      - pgbase
      - redis

  pgbase:
    image: postgres:latest
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 225388
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./db/data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis
    restart: always

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"